# services:
#   api-gateway:
#     build: ./api-gateway
#     ports:
#       - "3000:3000"
#     depends_on:
#       - nginx
#     environment:
#       - SERVICE_DISCOVERY_URL=http://service-discovery:8500
#     networks:
#       - stock-net

#   nginx:
#     image: nginx:latest
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#     depends_on:
#       - stock-prediction-service-1
#       - stock-prediction-service-2
#       - user-management-service-1
#       - user-management-service-2
#     networks:
#       - stock-net

#   # Multiple instances of stock-prediction-service
#   stock-prediction-service-1:
#     build: ./stock-prediction-service
#     depends_on:
#       - mongo
#     environment:
#       - SERVICE_DISCOVERY_URL=http://service-discovery:8500
#       - SERVICE_NAME=stock-prediction-service
#       - SERVICE_ADDRESS=stock-prediction-service-1
#       - SERVICE_PORT=5000
#     networks:
#       - stock-net

#   stock-prediction-service-2:
#     build: ./stock-prediction-service
#     depends_on:
#       - mongo
#     environment:
#       - SERVICE_DISCOVERY_URL=http://service-discovery:8500
#       - SERVICE_NAME=stock-prediction-service
#       - SERVICE_ADDRESS=stock-prediction-service-2
#       - SERVICE_PORT=5000
#     networks:
#       - stock-net

#   # Multiple instances of user-management-service
#   user-management-service-1:
#     build: ./user-management-service
#     depends_on:
#       - postgres
#       - redis
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=1234
#       - POSTGRES_DB=users_db
#       - SERVICE_DISCOVERY_URL=http://service-discovery:8500
#       - SERVICE_NAME=user-management-service
#       - SERVICE_ADDRESS=user-management-service-1
#       - SERVICE_PORT=5002
#     networks:
#       - stock-net

#   user-management-service-2:
#     build: ./user-management-service
#     depends_on:
#       - postgres
#       - redis
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=1234
#       - POSTGRES_DB=users_db
#       - SERVICE_DISCOVERY_URL=http://service-discovery:8500
#       - SERVICE_NAME=user-management-service
#       - SERVICE_ADDRESS=user-management-service-2
#       - SERVICE_PORT=5002
#     networks:
#       - stock-net

#   service-discovery:
#     build: ./service-discovery
#     ports:
#       - "8500:8500"
#     networks:
#       - stock-net

#   postgres:
#     image: postgres:13
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: 1234
#       POSTGRES_DB: users_db
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#     networks:
#       - stock-net

#   redis:
#     image: redis:7.4
#     networks:
#       - stock-net

#   mongo:
#     image: mongo:8.0
#     volumes:
#       - mongodata:/data/db
#     networks:
#       - stock-net

# networks:
#   stock-net:

# volumes:
#   pgdata:
#   mongodata:

# version: '3.8'

services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - nginx
    environment:
      - SERVICE_DISCOVERY_URL=http://service-discovery:8500
    networks:
      - stock-net

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - stock-prediction-service-1
      - stock-prediction-service-2
      - user-management-service-1
      - user-management-service-2
    networks:
      - stock-net

  # Multiple instances of stock-prediction-service
  stock-prediction-service-1:
    build: ./stock-prediction-service
    depends_on:
      - mongo
    environment:
      - SERVICE_DISCOVERY_URL=http://service-discovery:8500
      - SERVICE_NAME=stock-prediction-service
      - SERVICE_ADDRESS=stock-prediction-service-1
      - SERVICE_PORT=5000
    networks:
      - stock-net

  stock-prediction-service-2:
    build: ./stock-prediction-service
    depends_on:
      - mongo
    environment:
      - SERVICE_DISCOVERY_URL=http://service-discovery:8500
      - SERVICE_NAME=stock-prediction-service
      - SERVICE_ADDRESS=stock-prediction-service-2
      - SERVICE_PORT=5000
    networks:
      - stock-net

  # Multiple instances of user-management-service
  user-management-service-1:
    build: ./user-management-service
    depends_on:
      - postgres
      - redis
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=users_db
      - SERVICE_DISCOVERY_URL=http://service-discovery:8500
      - SERVICE_NAME=user-management-service
      - SERVICE_ADDRESS=user-management-service-1
      - SERVICE_PORT=5002
    networks:
      - stock-net

  user-management-service-2:
    build: ./user-management-service
    depends_on:
      - postgres
      - redis
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=users_db
      - SERVICE_DISCOVERY_URL=http://service-discovery:8500
      - SERVICE_NAME=user-management-service
      - SERVICE_ADDRESS=user-management-service-2
      - SERVICE_PORT=5002
    networks:
      - stock-net

  service-discovery:
    build: ./service-discovery
    ports:
      - "8500:8500"
    networks:
      - stock-net

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: users_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - stock-net

  redis:
    image: redis:7.4
    networks:
      - stock-net

  mongo:
    image: mongo:8.0
    volumes:
      - mongodata:/data/db
    networks:
      - stock-net

  # Add Prometheus Service
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    depends_on:
      - api-gateway
      - stock-prediction-service-1
      - stock-prediction-service-2
      - user-management-service-1
      - user-management-service-2
      - service-discovery
    networks:
      - stock-net

  # Add Grafana Service
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - stock-net

networks:
  stock-net:

volumes:
  pgdata:
  mongodata:
  grafana-storage:
